#include <iostream>
#include "login.h"
#include "user.h"
#include "get_user_info.h"
#include "update_user.h"
#include "transfer.h"
#include "menu.h"
#include "admin.h"

using namespace std;

void showMainMenu()
{
    cout << "===============================" << endl;
    cout << " CHAO MUNG DEN HE THONG VI DIEM" << endl;
    cout << "===============================" << endl;
    cout << "1. Dang nhap" << endl;
    cout << "2. Dang ky" << endl;
    cout << "0. Thoat" << endl;
    cout << "===============================" << endl;
    cout << "Nhap lua chon cua ban: ";
}

void userMenu(const User &user)
{
    int choice;
    do
    {
        cout << "===============================" << endl;
        cout << " CHAO MUNG DEN HE THONG VI DIEM" << endl;
        cout << "===============================" << endl;
        cout << "1. Ki·ªÉm tra th√¥ng tin" << endl;
        cout << "2. C·∫≠p nh·∫≠t th√¥ng tin" << endl;
        cout << "3. Giao d·ªãch" << endl;
        cout << "4. Chuy·ªÉn ti·ªÅn" << endl;
        cout << "0. Tho√°t" << endl;
        cout << "===============================" << endl;
        cout << "Nhap lua chon cua ban: ";
        cin >> choice;

        switch (choice)
        {
        case 1:
            getUserInfo("../data/users.xlsx", user.username);
            break;
        case 2:
            updateUserInfo(user.username, "123456"); // gi·∫£ ƒë·ªãnh OTP ƒë√∫ng l√† 123456
            break;
        case 3:
            cout << "üí∏ Thuc hien giao dich (chua xu ly)\n";
            break;
        case 4:
        {
            string filePathUser = "../data/users.xlsx";
            string filePathLog = "../data/logs.xlsx";
            transferPoints(filePathUser, filePathLog); // G·ªçi h√†m chuy·ªÉn ƒëi·ªÉm
            break;
        }
        case 0:
            cout << "‚¨ÖÔ∏è Dang xuat khoi tai khoan nguoi dung...\n";
            break;
        default:
            cout << "‚ùå Lua chon khong hop le! Vui long chon lai.\n";
            break;
        }
        cout << endl;
    } while (choice != 0);
}
void adminMenu(const User &user)
{
    int choice;
    do
    {
        cout << "=== MENU QUAN LY (Admin) ===\n";
        cout << "1. Xem danh s√°ch ng∆∞·ªùi d√πng\n";
        cout << "2. T·∫°o t√†i kho·∫£n m·ªõi\n";
        cout << "3. Ch·ªânh s·ª≠a t√†i kho·∫£n\n";
        cout << "4. Chuy·ªÉn ƒëi·ªÉm gi·ªØa c√°c t√†i kho·∫£n\n";
        cout << "0. ƒêƒÉng xu·∫•t\n";
        cout << "Ch·ªçn ch·ª©c nƒÉng: ";
        cin >> choice;
        cin.ignore();

        switch (choice)
        {
        case 1:
        {
            string filename = "../data/users.xlsx";
            viewUserList(filename);
            break;
        }
        case 2:
            // createNewUser();
            break;
        case 3:
        {
            string targetUser;
            cout << "Nh·∫≠p username c·∫ßn c·∫≠p nh·∫≠t: ";
            cin >> targetUser;
            updateUserInfo(targetUser, "", true); // adminMode = true
            break;
        }
        case 4:
        {
            string filePathUser = "../data/users.xlsx";
            string filePathLog = "../data/logs.xlsx";
            transferPoints(filePathUser, filePathLog);  // G·ªçi h√†m chuy·ªÉn ƒëi·ªÉm
            break;
        }
        case 0:
            cout << "ƒêang ƒëƒÉng xu·∫•t...\n";
            break;
        default:
            cout << " L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá!\n";
        }
    } while (choice != 0);
}


pair<string, string> getLoginInput()
{
    string username, password;
    cout << "Nhap ten dang nhap: ";
    cin >> username;
    cout << "Nhap mat khau: ";
    cin >> password;
    return {username, password};
}

void handleMenu()
{
    int choice;
    do
    {
        showMainMenu();
        cin >> choice;

        switch (choice)
        {
        case 1:
        {
            auto [username, password] = getLoginInput();
            auto userOpt = loginUser(username, password);

            if (userOpt.has_value())
            {
                User user = userOpt.value();
                if (user.role == "admin")
                {
                    adminMenu(user);
                }
                else
                {
                    userMenu(user);
                }
            }
            break;
        }
        case 2:
            cout << "Dang ky (chua xu ly)\n";
            break;
        case 0:
            cout << "Tam biet!\n";
            break;
        default:
            cout << "Lua chon khong hop le. Vui long thu lai.\n";
        }
        cout << endl;

    } while (choice != 0);
}

UserUpdateData inputUserData()
{
    UserUpdateData userData;
    int choice;

    do
    {
        cout << "\n--- C·∫¨P NH·∫¨T TH√îNG TIN ---\n";
        cout << "1. Thay ƒë·ªïi m·∫≠t kh·∫©u\n";
        cout << "2. Thay ƒë·ªïi t√™n ng∆∞·ªùi d√πng\n";
        cout << "3. Thay ƒë·ªïi s·ªë ƒëi·ªán tho·∫°i\n";
        cout << "4. Thay ƒë·ªïi ƒë·ªãa ch·ªâ\n";
        cout << "5. Thay ƒë·ªïi email\n";
        cout << "6. Thay ƒë·ªïi ng√†y sinh\n";
        cout << "7. N·∫°p th√™m ƒëi·ªÉm v√†o v√≠\n";
        cout << "0. Ho√†n t·∫•t c·∫≠p nh·∫≠t\n";
        cout << "Ch·ªçn m·ª•c b·∫°n mu·ªën thay ƒë·ªïi: ";
        cin >> choice;
        cin.ignore(); // X√≥a \n tr∆∞·ªõc khi getline

        switch (choice)
        {
        case 1:
            cout << "Nh·∫≠p m·∫≠t kh·∫©u m·ªõi: ";
            getline(cin, userData.password);
            break;
        case 2:
            cout << "Nh·∫≠p t√™n m·ªõi: ";
            getline(cin, userData.fullName);
            break;
        case 3:
            cout << "Nh·∫≠p s·ªë ƒëi·ªán tho·∫°i m·ªõi: ";
            getline(cin, userData.phone);
            break;
        case 4:
            cout << "Nh·∫≠p ƒë·ªãa ch·ªâ m·ªõi: ";
            getline(cin, userData.address);
            break;
        case 5:
            cout << "Nh·∫≠p email m·ªõi: ";
            getline(cin, userData.email);
            break;
        case 6:
            cout << "Nh·∫≠p ng√†y sinh m·ªõi: ";
            getline(cin, userData.birthday);
            break;
        case 7:
        {
            cout << "Nh·∫≠p s·ªë ƒëi·ªÉm c·∫ßn th√™m: ";
            string tmp;
            getline(cin, tmp);
            if (!tmp.empty())
            {
                try
                {
                    userData.balance = stod(tmp);
                }
                catch (...)
                {
                    cout << "‚ö†Ô∏è Gi√° tr·ªã nh·∫≠p kh√¥ng h·ª£p l·ªá. B·ªè qua.\n";
                }
            }
            break;
        }
        case 0:
            cout << " Ho√†n t·∫•t nh·∫≠p th√¥ng tin.\n";
            break;
        default:
            cout << " L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá. Vui l√≤ng th·ª≠ l·∫°i.\n";
        }
    } while (choice != 0);

    return userData;
}